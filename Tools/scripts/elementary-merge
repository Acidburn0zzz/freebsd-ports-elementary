#!/bin/sh -eu
#
# Copyright (c) 2002-2006 FreeBSD GNOME Team <freebsd-gnome@FreeBSD.org>
# Copyright (c) 2012-2017 FreeBSD Xfce Team <xfce@FreeBSD.org>
# Copyright (c) 2020-2021 Olivier Duchateau <duchateau.olivier@gmail.com>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# Based on marcusmerge, adapted for the Elementary desktop.
#


#### User settings

# Local repository (full path!)
LOCAL_REP=""
# The official ports collection
: ${PORTSDIR:="/usr/ports"}
####

#### Don't change anything below
PRGFILE="`realpath "$0"`"
PRGNAME="${0##*/}"

CWD=`pwd`

# Repository
: ${HOST:="https://codeberg.org/olivierd/freebsd-ports-elementary.git"}


err()
{
	echo "$@" >&2
	exit 1
}

usage()
{
	cat <<EOF >&2
usage: $PRGNAME option

options:
  -h    show this help
  -c    clone remote repository
  -m    merge into the ports tree
  -r    revert changes
  -u    update local repository
EOF
		exit 0
}

check_git()
{
	if [ -x $(which git 2>/dev/null) ]; then
		echo $(which git);
	else
		err "ERROR: git(1) not found. Try 'pkg install git'";
	fi
}

check_svn()
{
	if [ -x $(which svn 2>/dev/null) ]; then
		echo $(which svn);
	elif [ -x $(which svnlite 2>/dev/null) ]; then
		echo $(which svnlite);
	else
		err "ERROR: svn(1) not found. Try 'pkg install subversion'";
	fi
}

init_repository()
{
	if [ ! -d $(dirname ${LOCAL_REP}) ]; then
		mkdir -p $(dirname ${LOCAL_REP})
	fi
}

update()
{
	cd ${LOCAL_REP}

	${1} pull
}

checkout()
{
	git_bin=$(check_git)
		
	if [ ! -d "${LOCAL_REP}/.git" ]; then
		$(init_repository)

		cd $(dirname ${LOCAL_REP})
		${git_bin} clone ${HOST}
	else
		update ${git_bin};
	fi
	exit 0
}

revert()
{
	svn_bin=$(check_svn)

	if [ ! -d "${LOCAL_REP}/.git" ]; then
		err "ERROR: You must clone repository first!"
	else
		if [ -n "${PORTSDIR}" ]; then
			cd ${LOCAL_REP};

			dirs=$(find . -type d -depth 2 \
                   ! -path './.git*' ! -path './Tools*' ! -path './Mk*');
			for d in ${dirs}; do
				if [ -d "${PORTSDIR}/${d#./}" ]; then
					rm -Rf "${PORTSDIR}/${d#./}";
				fi
			done

			rm ${PORTSDIR}/Mk/Uses/elementary.mk
						
			cd ${PORTSDIR};
			${svn_bin} revert -R .;
						
			cd ${CWD};
			exit 0
		else
			err "ERROR: ${PORTSDIR} is not defined!"
		fi
	fi
}

merge()
{
	if [ ! -d "${LOCAL_REP}/.git" ]; then
		err "ERROR: You must clone repository first!";
	else
		if [ -n "${PORTSDIR}" ]; then
			cd ${LOCAL_REP};

			dirs=$(find . -type d -depth 2 \
                   ! -path './.git*' ! -path './Tools*' ! -path './Mk*');
			for d in ${dirs}; do
				# New port
				if [ ! -d "${PORTSDIR}/${d#./}" ]; then
					mkdir "${PORTSDIR}/${d#./}";
				fi

				# Clean port directory
				if [ -d "${PORTSDIR}/${d#./}/work" ]; then
					rm -Rf "${PORTSDIR}/${d#./}/work";
				fi
								
				# Overrides files/
				if [ -d "${PORTSDIR}/${d#./}/files" ]; then
					rm -Rf "${PORTSDIR}/${d#./}/files";
				fi

				# Copy everything
				cp -Rv ${d#./}/* ${PORTSDIR}/${d#./};
			done

			# Mk/...
			cp Mk/Uses/pantheon.mk ${PORTSDIR}/Mk/Uses ;

			cd ${CWD};
			exit 0
		else
			err "ERROR: ${PORTSDIR} is not defined!"
		fi
	fi
}

opts=$(getopt hcmur ${*})
if [ ${?} -ne 0 ]; then
		usage
fi
set -- ${opts}

if [ ${#} -eq 1 ]; then
	usage;
else
	while true; do
		case "${1}" in
			-h)
				usage;
				shift
				;;
			-c)
				checkout;
				shift
				;;
			-m)
				merge;
				shift
				;;
			-u)
				checkout;
				shift
				;;
			-r)
				revert;
				shift
				;;
			--)
				shift ; break
				;;
		esac
	done
fi
